openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8085
  description: Generated server url
paths:
  /update/{id}:
    put:
      tags:
      - order-controller
      operationId: updateOrder
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              required:
              - file
              type: object
              properties:
                order:
                  $ref: '#/components/schemas/Order'
                file:
                  type: string
                  format: binary
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Order'
  /orderItems/updateOrderStatus:
    put:
      tags:
      - order-item-controller
      operationId: updateOrderStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdOrderStatusBean'
        required: true
      responses:
        "201":
          description: Created
          content:
            '*/*':
              schema:
                type: boolean
  /upload:
    post:
      tags:
      - order-controller
      operationId: uploadFile
      requestBody:
        content:
          application/json:
            schema:
              required:
              - file
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /orderItems:
    get:
      tags:
      - order-item-controller
      operationId: getOrderItems
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderItem'
    post:
      tags:
      - order-item-controller
      operationId: addOrderItems
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/OrderItem'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/upload:
    post:
      tags:
      - file-controller
      operationId: uploadFile_1
      requestBody:
        content:
          application/json:
            schema:
              required:
              - file
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /addOrders:
    post:
      tags:
      - order-controller
      operationId: addOrders
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Order'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
  /addOrder:
    post:
      tags:
      - order-controller
      operationId: addOrder
      requestBody:
        content:
          application/json:
            schema:
              required:
              - file
              type: object
              properties:
                order:
                  $ref: '#/components/schemas/Order'
                file:
                  type: string
                  format: binary
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Order'
  /tables:
    get:
      tags:
      - dining-table-controller
      operationId: getAllDiningTables
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DiningTable'
  /tables/{id}:
    get:
      tags:
      - dining-table-controller
      operationId: getTableByid
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DiningTable'
  /tables/allTable:
    get:
      tags:
      - dining-table-controller
      operationId: getAllTable
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: integer
                format: int32
  /orders:
    get:
      tags:
      - order-controller
      operationId: findAllOrders
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
  /orderItems/{transactionId}:
    get:
      tags:
      - order-item-controller
      operationId: getOrderItemsByTransactionId
      parameters:
      - name: transactionId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderItem'
  /orderItems/getTotalPriceByDateInOneWeek:
    get:
      tags:
      - order-item-controller
      operationId: getTotalPriceByDateInOneWeek
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: string
  /orderItems/getTop5MenuList:
    get:
      tags:
      - order-item-controller
      operationId: getTop5MenuList
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Top5MenuList'
  /orderItems/getTableData/{id}:
    get:
      tags:
      - order-item-controller
      operationId: getTableIdAndStatus
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderItem'
  /orderItems/getOrderStatus:
    get:
      tags:
      - order-item-controller
      operationId: getOrderStatus
      parameters:
      - name: status
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrderItem'
  /orderItems/getAllTotalPrice:
    get:
      tags:
      - order-item-controller
      operationId: getAllTotalPrice
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /orderItems/getAllOrder:
    get:
      tags:
      - order-item-controller
      operationId: getAllOrder
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /orderByName/{name}:
    get:
      tags:
      - order-controller
      operationId: findIOrderByName
      parameters:
      - name: name
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Order'
  /orderById/{id}:
    get:
      tags:
      - order-controller
      operationId: findIOrderById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Order'
  /getAllMenu:
    get:
      tags:
      - order-controller
      operationId: getAllMenu
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: integer
                format: int32
  /files:
    get:
      tags:
      - order-controller
      operationId: getFile
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
  /api/files:
    get:
      tags:
      - file-controller
      operationId: getFile_1
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FileEntity'
  /delete/{id}:
    delete:
      tags:
      - order-controller
      operationId: deleteOrder
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
components:
  schemas:
    Order:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        foodType:
          type: string
        price:
          type: number
          format: double
        filename:
          type: string
        data:
          type: array
          items:
            type: string
            format: byte
    UpdOrderStatusBean:
      type: object
      properties:
        status:
          type: string
        orderItemId:
          type: integer
          format: int64
    DiningTable:
      type: object
      properties:
        tableId:
          type: integer
          format: int64
        tableNumber:
          type: integer
          format: int32
    OrderItem:
      type: object
      properties:
        orderItemId:
          type: integer
          format: int64
        order:
          $ref: '#/components/schemas/Order'
        orderDate:
          type: string
          format: date-time
        totalPrice:
          type: number
        table:
          $ref: '#/components/schemas/DiningTable'
        status:
          type: string
        quantity:
          type: integer
          format: int32
        transactionId:
          type: string
        receipt:
          type: string
    Top5MenuList:
      type: object
      properties:
        menuName:
          type: string
        totalOrderedQuantity:
          type: integer
          format: int32
    FileEntity:
      type: object
      properties:
        id:
          type: integer
          format: int64
        filename:
          type: string
        contentType:
          type: string
        data:
          type: array
          items:
            type: string
            format: byte
